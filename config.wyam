#n Wyam.Markdown
#n Wyam.Yaml
#n Wyam.Html
#n Wyam.Razor
#n Wyam.Metadata
#n Wyam.Sass
#n Wyam.Images

Settings["title"] = "Sedos";

Pipelines.Add("Social",
    ReadFiles("social.yml"),
    Yaml()
);

Pipelines.Add("HeaderImages",
    ReadFiles("assets/images/headers/*.*"),
    Image()
        .SetJpegQuality(80).Resize(width: 1280, height: null),
    OrderBy(@doc["Title"]),
    WriteFiles()
);

Pipelines.Add("AllShows",
    ReadFiles("Shows/*/*/index.md"),    
    FrontMatter(Yaml()),
    Markdown(),
    If((doc, ctx) => doc.ContainsKey("flyer"), 
        Meta("HomePageImage", (doc, ctx) => 
            ctx.Execute(
                new IModule[] {
                    ReadFiles((doc2, ctx2) => doc.DirectoryPath(Keys.RelativeFileDir).CombineFile(doc.Get<string>("flyer"))),
                    Image().SetJpegQuality(100).Resize(350, 400),
                    WriteFiles()
                }, 
                new IDocument[] {
                    doc
                }
            ).FirstOrDefault()
        )
    ),
    Meta("HeaderImages", (doc, ctx) => 
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.DirectoryPath(Keys.RelativeFileDir).CombineFile("Headers/*.*")),
                Image().SetJpegQuality(80).Resize(width: 1280, height: null),
                WriteFiles()
            }, 
            new IDocument[] {
                 doc
            }
        )
    ),
    Razor().WithViewStart("Layout/_ShowViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("UpcomingShows",
    Documents("AllShows"),
    Where((doc, ctx) => {
        var showTimes = doc.Get<IEnumerable<DateTime>>("showtimes").OrderBy(x => x);
        return showTimes.Any() && showTimes.Last() > DateTime.Now;
    }),
    OrderBy((doc, ctx) => {
        return doc.Get<IEnumerable<DateTime>>("showtimes").OrderBy(x => x).First();
    }),
    Take(3)
);

Pipelines.Add("News",
    ReadFiles("news/*.md"),
    FrontMatter(Yaml()),
    Markdown(),
    Excerpt().WithOuterHtml(false),
    Razor().WithViewStart("Layout/_NewsArticleViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("LatestNews", 
    Documents("News"),
    OrderBy((doc, ctx) => {
        return doc.Get<DateTime>("date");
    }).Descending(),
    Take(3)
);

Pipelines.Add("Sass",
    ReadFiles("assets/css/main.scss"),
    Sass().WithCompactOutputStyle(),
    WriteFiles()
);

Pipelines.Add("Index",
    ReadFiles("index.cshtml"),
    Razor(),
	WriteFiles(".html")
);

Pipelines.Add("TopLevelPages",
    ReadFiles("shows.cshtml", "news.cshtml"),
    FrontMatter(Yaml()),
    Razor().WithViewStart("Layout/_PageViewStart.cshtml"),
	WriteFiles(".html")
);

Pipelines.Add("Markdown",
	ReadFiles("*.md"),    
	FrontMatter(Yaml()),
	Markdown(),
    Razor().WithViewStart("Layout/_PageViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("ImageAssets",
    CopyFiles("assets/images/**/*.*")
);

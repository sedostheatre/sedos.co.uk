#n Wyam.Markdown
#n Wyam.Yaml
#n Wyam.Html
#n Wyam.Razor
#n Wyam.Metadata
#n Wyam.Sass
#n Wyam.Images

Settings["title"] = "Sedos";

Pipelines.Add("Footer",
    ReadFiles("footer.yml"),
    Yaml()
);

Pipelines.Add("FallbackHeaders",
    ReadFiles("assets/images/headers/fallback/*.*"),
    Image()
        .SetJpegQuality(80).Resize(width: 1280, height: null),
    OrderBy(@doc["Title"]),
    WriteFiles()
);

Pipelines.Add("ShowDetails",
    ReadFiles("show-details/*.md"),
    FrontMatter(Yaml()),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>()
);

Pipelines.Add("AllShows",
    ReadFiles("shows/*.md"),
    FrontMatter(Yaml()),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>(),
    Meta("header-image", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("header-image")),
                Image().SetJpegQuality(80).Resize(width: 1280, height: null),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Meta("flyer", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("flyer")),
                Image().SetJpegQuality(80).Resize(width: null, height: 360),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Razor().WithViewStart("Layout/_ShowViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("News",
    ReadFiles("news/*.md"),
    FrontMatter(Yaml()),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>(),
    Excerpt().WithOuterHtml(false),
    Meta("image", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("image")),
                Image().SetJpegQuality(100).Resize(300, 300),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Razor().WithViewStart("Layout/_NewsArticleViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("Events",
    ReadFiles("events/*.md"),
    FrontMatter(Yaml()),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>(),
    Excerpt().WithOuterHtml(false),
    Meta("image", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("image")),
                Image().SetJpegQuality(100).Resize(300, 300),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Razor().WithViewStart("Layout/_EventViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("UpcomingEvents",
    Documents("Events"),
    Where((doc, ctx) => doc.Get<DateTime>("time") > DateTime.Now),
    OrderBy((doc, ctx) => doc.Get<DateTime>("time"))
);

Pipelines.Add("RegularEvents",
    ReadFiles("regular-events/*.md"),
    FrontMatter(Yaml()),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>(),
    Meta("image", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("image")),
                Image().SetJpegQuality(100).Resize(300, 300),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Razor().WithViewStart("Layout/_EventViewStart.cshtml"),
    WriteFiles(".html")
);


Pipelines.Add("AboutSections",
    ReadFiles("about/*.md"),
    FrontMatter(Yaml()),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>(),
    Meta("about-image", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("about-image")),
                Image().SetJpegQuality(100).Resize(600, 300),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Razor().WithViewStart("Layout/_PageViewStart.cshtml"),
    WriteFiles(".html")
);


Pipelines.Add("Sass",
    ReadFiles("assets/css/main.scss"),
    Sass().WithCompactOutputStyle(),
    WriteFiles()
);

Pipelines.Add("Index",
    ReadFiles("index.cshtml"),
    FrontMatter(Yaml()),
    Razor(),
    WriteFiles(".html")
);

Pipelines.Add("TopLevelPages",
    ReadFiles("all-shows.cshtml", "about.cshtml"),
    FrontMatter(Yaml()),
    Meta("header-images", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("header-images")),
                Image().SetJpegQuality(80).Resize(width: 1280, height: null),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Razor().WithViewStart("Layout/_PageViewStart.cshtml"),
    WriteFiles(".html")
);

Pipelines.Add("Markdown",
    ReadFiles("*.md"),
    FrontMatter(Yaml()),
    Meta("header-images", (doc, ctx) =>
        ctx.Execute(
            new IModule[] {
                ReadFiles((doc2, ctx2) => doc.Get<string>("header-images")),
                Image().SetJpegQuality(80).Resize(width: 1280, height: null),
                WriteFiles()
            },
            new IDocument[] {
                doc
            }
        ).FirstOrDefault()
    ),
    Markdown().UseExtension<Markdig.Extensions.Bootstrap.BootstrapExtension>(),
    Razor().WithViewStart((doc, ctx) => doc.Get("view-start", "Layout/_PageViewStart.cshtml")),
    WriteFiles(".html")
);

Pipelines.Add("ImageAssets",
    CopyFiles("assets/images/**/*.*")
);

Pipelines.Add("NetlifyAdmin",
    CopyFiles("admin/**/*.*")
);

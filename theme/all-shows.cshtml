---
title: All Shows
header-image: assets/images/headers/SedosWebsite-Banner-redcurtain.jpg
---

@{
    Layout = "_Page";
}

<div class="row">
    <div class="col-md-12 pt-3">
        @{
            var pastShows = Outputs.FromPipeline("AllShows")
                .OrderBy(show => show.Get("showtimes", Enumerable.Empty<IDocument>()).Select(x => x.Get<DateTime>("time")).OrderBy(x => x).FirstOrDefault())
                .GroupBy(show => show.Get("year"))
                .OrderByDescending(grouping => grouping.Key);

            @foreach(var grouping in pastShows)
            {
                <h4>@grouping.Key</h4>
                <ul>
                    @foreach(var show in grouping)
                    {
                        if(show.Get<bool>("has-body-content"))
                        {
                            <li><a href="@Context.GetLink(show)">@show.Get("title")</a></li>
                        }
                        else
                        {
                            <li>@show.Get("title")</li>
                        }
                    }
                </ul>

                var reviewOfYear = Outputs
                    .FromPipeline("MarkdownPages")
                    .Where(page => page.Get("review-of-year", "") == grouping.Key.ToString())
                    .FirstOrDefault();

                if(reviewOfYear != null)
                {
                    <p>
                        <a href="@Context.GetLink(reviewOfYear)">
                            Read a review of @grouping.Key
                        </a>
                    </p>
                }
            }
        }
    </div>
</div>


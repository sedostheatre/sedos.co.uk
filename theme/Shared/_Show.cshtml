@using Statiq.Common;
@using System.Text.RegularExpressions;
@using Sedos.Helpers;
@model IDocument

@{
    Layout = "_Default";
}

<div class="show-page-header bg-white">
    @Html.Partial("Partials/_ShowHeader", Model)
</div>

<div class="page-section mt-3px">
    <div class="container bg-white">
        <div class="row">
            <div class="col-md-8 pt-3" role="tabpanel">
                <ul class="nav nav-tabs show-nav" role="tablist" id="showDetailsTab">
                    <li class="nav-item">
                        <button class="nav-link active show-details-nav-header" id="details-tab" data-bs-toggle="tab" data-bs-target="#details" role="tab" aria-controls="details" aria-selected="true">Details</button>
                    </li>
                    @{
                        foreach (var document in Model.Get("sections", Enumerable.Empty<IDocument>()))
                        {
                            var safeTitle = Regex.Replace(document["title"].ToString(), "[^A-Za-z0-9]", "").ToLower();
                            <li class="nav-item">
                                <button class="nav-link show-details-nav-header" id="@safeTitle-tab" data-bs-toggle="tab" data-bs-target="#@safeTitle" role="tab" aria-controls="@safeTitle" aria-selected="false">@document["title"]</button>
                            </li>
                        }
                    }
                </ul>
                <div class="tab-content" id="showDetailsTabContent">
                    <div role="tabpanel" class="tab-pane fade active show" id="details" aria-labelledby="details-tab">
                        <p>
                            @RenderBody()
                        </p>
                    </div>
                    @{
                        foreach (var document in Model.Get("sections", Enumerable.Empty<IDocument>()))
                        {
                            var safeTitle = Regex.Replace(document["title"].ToString(), "[^A-Za-z0-9]", "").ToLower();
                            <div class="tab-pane fade" id="@safeTitle" role="tabpanel" aria-labelledby="@safeTitle-tab">
                                <div class="pt-3">
                                    @Html.Raw(document["body"])
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
            <div class="col-md-4 pt-3 show-timings-column">
                @{
                    if (Model.ContainsKey("venue"))
                    {
                        var venue = Outputs.FromPipeline("Venues").FirstOrDefault(x => x["key"].ToString().Equals(Model["venue"].ToString()));
                        if (venue != null)
                        {
                            <h4><a href="@Context.GetLink(venue)">@venue["name"]</a></h4>
                        }
                        else
                        {
                            <h4>@Model["venue"]</h4>
                        }
                    }

                    if (Model.ContainsKey("ticket-prices"))
                    {
                        <h4>@Model["ticket-prices"]</h4>
                    }

                    if (Model.ContainsKey("additional-ticket-info"))
                    {
                        <p>@Model["additional-ticket-info"]</p>
                    }

                    var showDates = Model.Get("showtimes", Enumerable.Empty<IDocument>()).Select(x => x.Get<DateTime>("time")).OrderBy(x => x);
                    if (showDates.Any())
                    {
                        <ul>
                            @foreach (var showDate in showDates.Select(x => x.ToString("dddd d MMMM yyyy h.mm") + x.ToString("tt").ToLower()))
                            {
                                <li>@showDate</li>
                            }
                        </ul>

                        if (showDates.Any(x => x > DateTime.Now) && Model.Get("box-office-open", false))
                        {
                            var bookingLink = BoxOfficeUri.FromBoxOfficeLink(Model.GetString("box-office-link", "https://sedos.ticketsolve.com/shows"));
                            <a class="btn btn-sedos-blue" target="_blank" href="@bookingLink">Book tickets</a>
                        }
                    }
                }
                @{
                    var flyerDocument = Model.Get<string>("flyer");
                    var link = flyerDocument == null ? "" : Context.GetLink(flyerDocument);
                    <div class="sidebar-flyer">
                        <img src="@link" alt='@Model["title"] flyer image' height="352" width="249"></img>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
